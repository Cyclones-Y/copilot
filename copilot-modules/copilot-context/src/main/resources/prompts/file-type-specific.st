REACT SPECIFIC INSTRUCTIONS:
- Use functional components with hooks (useState, useEffect, etc.)
- Follow React best practices and patterns
- Use proper JSX syntax and component structure
- Implement proper state management
- Use TypeScript if applicable
- Include proper prop types and error handling

VUE SPECIFIC INSTRUCTIONS:
- Use Vue 3 Composition API when possible
- Follow Vue.js best practices and conventions
- Use proper template syntax and directives
- Implement reactive data and computed properties
- Use proper component lifecycle hooks
- Include proper TypeScript support if needed

ANGULAR SPECIFIC INSTRUCTIONS:
- Use Angular latest version conventions
- Follow Angular style guide and best practices
- Use proper component, service, and module structure
- Implement dependency injection correctly
- Use TypeScript with proper typing
- Include proper RxJS usage for async operations

MINI PROGRAM SPECIFIC INSTRUCTIONS:
- Follow WeChat Mini Program development standards
- Use proper WXML, WXSS, and JavaScript structure
- Implement proper page lifecycle methods
- Use WeUI components and design patterns
- Handle proper data binding and event handling
- Include proper API usage and error handling

NODE.JS SPECIFIC INSTRUCTIONS:
- Use modern Node.js features and ES6+ syntax
- Follow Node.js best practices and patterns
- Implement proper error handling and logging
- Use appropriate npm packages and dependencies
- Include proper async/await usage
- Implement proper security practices

PYTHON SPECIFIC INSTRUCTIONS:
- Follow PEP 8 style guidelines
- Use proper Python idioms and patterns
- Implement proper exception handling
- Use type hints when appropriate
- Follow Python best practices for imports and structure
- Include proper documentation and comments

JAVA SPECIFIC INSTRUCTIONS:
- Follow Java coding conventions and best practices
- Use proper OOP principles and design patterns
- Implement proper exception handling
- Use appropriate Java 8+ features (streams, lambdas, etc.)
- Include proper package structure and imports
- Use proper annotations and documentation

SPRING BOOT SPECIFIC INSTRUCTIONS:
- Follow Spring Boot conventions and best practices
- Use proper dependency injection and annotations
- Implement proper REST API design
- Use appropriate Spring Boot starters
- Include proper configuration and properties
- Implement proper error handling and validation

GENERAL DEVELOPMENT INSTRUCTIONS:
- Follow language-specific best practices
- Use proper code structure and organization
- Implement proper error handling
- Include appropriate comments and documentation
- Use modern language features when applicable
